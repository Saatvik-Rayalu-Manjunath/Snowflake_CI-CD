name: "TEMP Snowflake Demo (hardcoded creds)"

on:
  workflow_dispatch: {}
  push:
    branches: [ "main", "demo" ]
  pull_request:
    branches: [ "main" ]

jobs:
  deploy:
    name: "Deploy to Production"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install Snowflake connector
        run: |
          python -m pip install --upgrade pip
          pip install --quiet snowflake-connector-python

      - name: Test connection (hardcoded)
        shell: bash
        run: |
          python - <<'PY'
          import snowflake.connector
          # ---- TEMP HARDCODED ----
          USER="saatvikrayalu"
          PASSWORD="w_vrX7.CVfFNh.8"     # <-- put your temp password here
          ACCOUNT="jfuvmro-fb11082"  # <-- no '.snowflakecomputing.com'
          WAREHOUSE="COMPUTE_WH"
          # ------------------------
          print("::add-mask::" + PASSWORD)
          conn = snowflake.connector.connect(
              user=USER, password=PASSWORD, account=ACCOUNT, warehouse=WAREHOUSE
          )
          cur = conn.cursor()
          cur.execute("select current_user(), current_account(), current_region(), current_version()")
          print("✅ Connected:", cur.fetchone())
          cur.close(); conn.close()
          PY

      - name: Deploy (optional migrate.py)
        if: ${{ hashFiles('migrate.py') != '' }}
        run: |
          echo "Starting deployment..."
          python migrate.py
          echo "Deployment complete."

      - name: Post-deploy report (hardcoded)
        if: always()
        shell: bash
        run: |
          python - <<'PY'
          import snowflake.connector
          USER="saatvikrayalu"
          PASSWORD="w_vrX7.CVfFNh.8"         # <-- same temp password
          ACCOUNT="jfuvmro-fb11082"
          WAREHOUSE="COMPUTE_WH"
          print("::add-mask::" + PASSWORD)
          try:
              conn = snowflake.connector.connect(
                  user=USER, password=PASSWORD, account=ACCOUNT, warehouse=WAREHOUSE
              )
              cur = conn.cursor()
              try:
                  cur.execute("select count(*) from PROD_DB.PUBLIC.products")
                  count = cur.fetchone()[0]
                  print(f"📈 FINAL STATUS: {count} products now live in PRODUCTION")
              except Exception as e:
                  print(f"ℹ️ Report skipped (table missing or privilege issue): {e}")
              finally:
                  cur.close(); conn.close()
          except Exception as e:
              print(f"ℹ️ Could not connect for report: {e}")
          PY

