name: üöÄ Snowflake Demo Pipeline

on:
  push:
    branches: [ main, demo ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:  # Manual trigger for demo

jobs:
  deploy:
    name: üéØ Deploy to Production
    runs-on: ubuntu-latest
    
    steps:
    - name: üì• Checkout Code
      uses: actions/checkout@v3
      
    - name: üêç Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        
    - name: üì¶ Install Dependencies
      run: |
        pip install snowflake-connector-python
        
    # Replace the "üß™ Test Connection" step with this:
    - name: üß™ Test Connection
      env:
        SNOWFLAKE_USER: ${{ secrets.SNOWFLAKE_USER }}
        SNOWFLAKE_PASSWORD: ${{ secrets.SNOWFLAKE_PASSWORD }}
        SNOWFLAKE_ACCOUNT: ${{ secrets.SNOWFLAKE_ACCOUNT }}
      run: |
        echo "Testing connection with user: $SNOWFLAKE_USER"
        echo "Account: $SNOWFLAKE_ACCOUNT"
        python -c "
        import snowflake.connector
        import os
        
        user = os.environ.get('SNOWFLAKE_USER')
        password = os.environ.get('SNOWFLAKE_PASSWORD') 
        account = os.environ.get('SNOWFLAKE_ACCOUNT')
        
        print(f'Connecting with user: {user}')
        print(f'Account: {account}')
        
        if not user or not password or not account:
            print('‚ùå Missing credentials!')
            print(f'User: {bool(user)}')
            print(f'Password: {bool(password)}')
            print(f'Account: {bool(account)}')
            exit(1)
        
        try:
            conn = snowflake.connector.connect(
                user=user,
                password=password,
                account=account,
                warehouse='COMPUTE_WH'
            )
            print('‚úÖ Snowflake connection successful!')
            conn.close()
        except Exception as e:
            print(f'‚ùå Connection failed: {e}')
            exit(1)
        "
        
     - name: üöÄ Deploy to Production
      env:
        SNOWFLAKE_USER: ${{ secrets.SNOWFLAKE_USER }}
        SNOWFLAKE_PASSWORD: ${{ secrets.SNOWFLAKE_PASSWORD }}
        SNOWFLAKE_ACCOUNT: ${{ secrets.SNOWFLAKE_ACCOUNT }}
      run: |
        echo "üé¨ Starting automated deployment..."
        python migrate.py
        echo "üéâ Deployment completed!" 

    - name: üìä Post-Deployment Report
      if: always()
      env:
        SNOWFLAKE_USER: ${{ secrets.SNOWFLAKE_USER }}
        SNOWFLAKE_PASSWORD: ${{ secrets.SNOWFLAKE_PASSWORD }}
        SNOWFLAKE_ACCOUNT: ${{ secrets.SNOWFLAKE_ACCOUNT }}
      run: |
        python -c "
        import snowflake.connector, os
        conn = snowflake.connector.connect(
            user='saatvikrayalu',
            password='w_vrX7.CVfFNh.8', 
            account='JFUVMRO-FB11082'
        )
        cursor = conn.cursor()
        cursor.execute('SELECT COUNT(*) FROM PROD_DB.PUBLIC.products')
        count = cursor.fetchone()[0]
        print(f'üìà FINAL STATUS: {count} products now live in PRODUCTION')
        conn.close()
        "
